int	<KW,1>
a	<IDN,a>
;	<SE,24>
void	<KW,2>
func	<IDN,func>
(	<SE,20>
)	<SE,21>
{	<SE,22>
a	<IDN,a>
=	<OP,11>
10	<INT,10>
;	<SE,24>
return	<KW,3>
0	<INT,0>
;	<SE,24>
}	<SE,23>



1	program#int	reduction
2	compUnit#int	reduction
3	decl#int	reduction
4	varDecl#int	reduction
5	bType#int	reduction
6	int#int	move
7	varDef#Ident	reduction
8	Ident#Ident	move
9	argVarDef#;	reduction
10	argVarDecl#;	reduction
11	;#;	move
12	compUnit#void	reduction
13	funcDef#void	reduction
14	funcType#void	reduction
15	void#void	move
16	Ident#Ident	move
17	(#(	move
18	funcFParams#)	reduction
19	)#)	move
20	block#{	reduction
21	{#{	move
22	blockItem#Ident	reduction
23	stmt#Ident	reduction
24	exp#Ident	reduction
25	assignExp#Ident	reduction
26	eqExp#Ident	reduction
27	relExp#Ident	reduction
28	addExp#Ident	reduction
29	mulExp#Ident	reduction
30	unaryExp#Ident	reduction
31	Ident#Ident	move
32	callFunc#=	reduction
33	mulExpAtom#=	reduction
34	addExpAtom#=	reduction
35	relExpAtom#=	reduction
36	eqExpAtom#=	reduction
37	assignExpAtom#=	reduction
38	=#=	move
39	eqExp#INT	reduction
40	relExp#INT	reduction
41	addExp#INT	reduction
42	mulExp#INT	reduction
43	unaryExp#INT	reduction
44	primaryExp#INT	reduction
45	number#INT	reduction
46	INT#INT	move
47	mulExpAtom#;	reduction
48	addExpAtom#;	reduction
49	relExpAtom#;	reduction
50	eqExpAtom#;	reduction
51	assignExpAtom#;	reduction
52	;#;	move
53	blockItem#return	reduction
54	stmt#return	reduction
55	return#return	move
56	argExp#INT	reduction
57	exp#INT	reduction
58	assignExp#INT	reduction
59	eqExp#INT	reduction
60	relExp#INT	reduction
61	addExp#INT	reduction
62	mulExp#INT	reduction
63	unaryExp#INT	reduction
64	primaryExp#INT	reduction
65	number#INT	reduction
66	INT#INT	move
67	mulExpAtom#;	reduction
68	addExpAtom#;	reduction
69	relExpAtom#;	reduction
70	eqExpAtom#;	reduction
71	assignExpAtom#;	reduction
72	;#;	move
73	blockItem#}	reduction
74	}#}	move
75	compUnit##	reduction
76	EOF#EOF	accept
